version: '3'
services:
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    networks:
      - mynet
    ports:
      - "9411:9411"

  postgres:
    container_name: postgres
    image: postgres
    networks:
      - mynet
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: default@123
      PG_DATA: /data/postgres
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 15s
      retries: 3

  eureka:
    build:
      context: ./eureka
      dockerfile: Dockerfile
    networks:
      - mynet
    ports:
      - "8761:8761"
    image: eureka:1.0.0
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka:8761" ]
      interval: 5s
      timeout: 15s
      retries: 3

  config:
    build:
      context: ./config
      dockerfile: Dockerfile
    networks:
      - mynet
    ports:
      - "8088:8088"
    image: config:1.0.0
    depends_on:
      eureka:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://config:8088/gateway/default" ]
      interval: 5s
      timeout: 15s
      retries: 3

  journal:
    build:
      context: ./journal
      dockerfile: Dockerfile
    networks:
      - mynet
    ports:
      - "8081:8081"
    image: journal:1.0.0
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_healthy
      postgres:
        condition: service_healthy

  category:
    build:
      context: ./category
      dockerfile: Dockerfile
    networks:
      - mynet
    ports:
      - "8082:8082"
    image: category:1.0.0
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_healthy
      postgres:
        condition: service_healthy


  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    networks:
      - mynet
    ports:
      - "8060:8060"
    image: gateway:1.0.0
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_healthy

networks:
  mynet:
    driver: bridge

